class Promotion < ActiveRecord::Base
  # table name
  # extends ...................................................................
  # includes ..................................................................
  # constants .................................................................
  # related macros ............................................................
  # relationships .............................................................
  belongs_to :promotion_category

  has_many :promotion_actions, dependent: :destroy
  has_many :promotion_rules, dependent: :destroy

  has_one :order
  # validations ...............................................................
  validates :expires_at, presence: true
  validates :starts_at, presence: true
  validates :name, presence: true
  validates :usage_limit, presence: true, numericality: { only_integer: true }
  validates :code, presence: true, uniqueness: true
  # callbacks .................................................................
  # scopes ....................................................................
  # other macros (like devise's) ..............................................
  accepts_nested_attributes_for :promotion_rules, allow_destroy: true
  accepts_nested_attributes_for :promotion_actions, allow_destroy: true
  # class methods .............................................................
  # public instance methods ...................................................
  # protected instance methods ................................................
  def usage_promotion(user,order)
    promotion_amount = self.promotion_rules.last.is_user_usge(user, order)
    if promotion_amount
      order.update(promotion: self, promo_total: promotion_amount)
      self.update(usage_limit: (self.usage_limit - 1))
    end
  end
  # private instance methods ..................................................
end
